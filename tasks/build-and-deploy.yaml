---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-app
spec:
  params:
    - name: contextDir
      description: the context dir within source
      default: .
    # - name: mavenMirrorUrl
    #   description: the maven mirrror url
    #   default: https://repo.maven.apache.org/maven2/
    # - name: destinationImage
    #   description: the fully qualified image name
    #   default: "$(outputs.resources.builtImage.url)"
    # - name: dockerFile
    #   description: the docker file to used for building the application
    #   default: Dockerfile
    # - name: tlsVerify
    #   description: tls verify
    #   type: string
    #   default: "false"
  resources:
    inputs:
      - name: repo
        type: git
    # outputs:
    #   - name: builtImage
    #     type: image
  steps:
    - name: build-sources
      image: docker.io/golang:1.15
      workingDir: "/workspace/repo/$(inputs.params.contextDir)"
      command:
        - go
      args:
        - build
        - -o
        - bin/hellofromgo
    - name: ls-build-sources
      image: bash:latest
      script: |
        #!/usr/bin/env bash
        ls -ltr /workspace/repo
    # - name: build-image
    #   image: quay.io/buildah/stable
    #   workingDir: "/workspace/source/$(inputs.params.contextDir)"
    #   command:
    #     - "buildah"
    #   args:
    #     - "bud"
    #     - "--layers"
    #     - "-f"
    #     - "$(inputs.params.dockerFile)"
    #     - "-t"
    #     - "$(inputs.params.destinationImage)"
    #     - "."
    #   securityContext:
    #     privileged: true
    #     runAsUser: 0
    #   volumeMounts:
    #     - name: varlibc
    #       mountPath: /var/lib/containers
    # - name: push-image
    #   image: quay.io/buildah/stable
    #   workingDir: "/workspace/source/$(inputs.params.contextDir)"
    #   command:
    #     - "buildah"
    #   args:
    #     - "push"
    #     - "--tls-verify=$(inputs.params.tlsVerify)"
    #     - $(inputs.params.destinationImage)
    #     - "docker://$(inputs.params.destinationImage)"
    #   securityContext:
    #     runAsUser: 0
    #     privileged: true
    #   volumeMounts:
    #     - name: varlibc
    #       mountPath: /var/lib/containers
  # volumes:
  #   - name: varlibc
  #     emptyDir: {}